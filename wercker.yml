
box: golang

dev:
  steps:
    - setup-go-workspace:
      package-dir: github.com/pipeline
    
    - script:
        name: env
        code: env
    
    - script:
        name: go get
        code: |
            cd $WERCKER_SOURCE_DIR
            go version
            go get -u github.com/Masterminds/glide
            export PATH=$WERCKER_SOURCE_DIR/bin:$PATH
            glide install

    - internal/watch:
        code: got run hello-world.go
        reload: true
    
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # https://devcenter.wercker.com/development/steps/
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace:
        package-dir: github.com/pipeline
    
    - script:
        name: env
        code: env

    # Gets the dependencies
    - script:
        name: go get
        code: |
            cd $WERCKER_SOURCE_DIR
            go version
            go get -u github.com/Masterminds/glide
            export PATH=$WERCKER_SOURCE_DIR/bin:$PATH
            glide install

    # Build the project
    - script:
        name: go build
        code: |
          go build

    # Test the project
    - script:
        name: go test
        code: |
          go test -v ${glide novendor}

    - script:
        name: copy files to wercker output
        code: |
            cp -R ./ ${WERCKER_OUTPUT_DIR}

deploy:
    steps:
        - internal/docker-push:
            username: $DOCKER_USER
            password: $DOCKER_PASSWORD
            cmd: /pipeline/source/hello
            port: "8080"
            tag: latest
            repository: thedave2019/go-test
            registry: https://registry.hub.docker.com     
